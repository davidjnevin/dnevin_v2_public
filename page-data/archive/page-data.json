{"componentChunkName":"component---src-pages-archive-js","path":"/archive/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2023-05-16","title":"Fastapi Web page Summarizer","tech":["FastAPI","TDD","Docker","Github Actions","Postgres"],"github":"https://github.com/davidjnevin/tdd-fastapi","external":"","company":""},"html":"<p>A TDD FastAPI backend to summarize web pages using NLTK and POstgres. Running on Docker with Continuous Integration using Github Actions.</p>"}},{"node":{"frontmatter":{"date":"2023-04-10","title":"Hugo Blog Tag Generator","tech":["Python","pytest","NLP","Sqlite"],"github":"https://github.com/davidjnevin/tag_generator_hugo_blog","external":"","company":""},"html":"<p>This project generates tags for my existing blog posts. The script uses the NLTK python library to analyze and extract meaningful tags.</p>"}},{"node":{"frontmatter":{"date":"2023-03-23","title":"Zoom Chat Cleaner","tech":["Python","PyQt6","pyperclip","pytest"],"github":"https://github.com/davidjnevin/zoom_chat_fixer","external":"","company":""},"html":"<p>The program reads in a .txt file of a Zoom chat log that contains time-stamps and chat messages, and outputs a cleaned version of the chat log in which only the chat messages remain.</p>"}},{"node":{"frontmatter":{"date":"2021-07-27","title":"Personal Code Blog","tech":["HTML","SASS","Hugo"],"github":"https://github.com/davidjnevin/davidjnevinLive/tree/main","external":"https://davidjnevin.com/","company":null},"html":"<p>My personal blog covering my coding journey and a place to keep notes of use for my future self. I learned quite a bit about HTML, SASS, and static site generation.</p>"}},{"node":{"frontmatter":{"date":"2021-05-02","title":"Blue Sea Writers - Online Magazine","tech":["C#",".Net","CSS","MySQL","Umbraco"],"github":"","external":"https://blueseawriters.com/","company":"Blue Sea Writers"},"html":"<p>A writing community to bounce ideas off, share successes and frustrations, get critiques, try new techniques, and get those sentences onto the page and into the world.</p>"}},{"node":{"frontmatter":{"date":"2021-05-02","title":"Critique Wheel Policies","tech":["HTML","SASS","Hugo"],"github":"https://github.com/davidjnevin/tag_generator_hugo_blog","external":"https://policies.critiquewheel.com/policies/privacy/","company":"Critique Wheel"},"html":"<p>A company policy site written in Markdown using the Hugo static site generator.</p>"}},{"node":{"frontmatter":{"date":"2018-04-20","title":"Template for project","tech":["R","Spotify Web API"],"github":"https://github.com/davidjnevin/","external":"https://davidnevin.net","company":"davidjnevin"},"html":"<p>R Project for my Data Science class at Northeastern to analyze the top Spotify tracks of 2017 and their audio features.</p>"}},{"node":{"frontmatter":{"date":"2","title":"CI/CD Streamlit Docker","tech":["Github Actions","SSH","Docker","Python","Streamlit"],"github":"https://github.com/davidjnevin/streamlit-ci-cd-test","external":"https://example.streamlit.project.davidnevin.net/","company":null},"html":"<p>A CI/CD example using a dockerized Streamlit example app, using github actions over ssh.</p>"}}]}},"pageContext":{}},"staticQueryHashes":["1994492073","2009693873","2031412112","3825832676"]}